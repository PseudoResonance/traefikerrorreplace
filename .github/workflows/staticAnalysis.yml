name: Static Analysis

on:
  workflow_dispatch:
  push:
    branches:
    - "*"
    paths-ignore:
    - '.gitattributes'
    - '.gitignore'
    - 'LICENSE'
    - 'README.md'
    - '.vscode/**'
    - '.devcontainer/**'
  pull_request_target:
    branches:
    - "*"
    paths-ignore:
    - '.gitattributes'
    - '.gitignore'
    - 'LICENSE'
    - 'README.md'
    - '.vscode/**'
    - '.devcontainer/**'

permissions:
  checks: write
  contents: read
  pull-requests: read

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      GOLANGCI_LINT_VERSION: v1.61.0
      YAEGI_VERSION: v0.13.0

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: ${{ env.GOLANGCI_LINT_VERSION }}

  gofmt:
    runs-on: ubuntu-latest
    env:
      GOLANGCI_LINT_VERSION: v1.61.0
      YAEGI_VERSION: v0.13.0

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'

    - name: gofmt
      uses: wearerequired/lint-action@v2
      with:
        gofmt: true

  codecov:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'

    - name: Test Code
      run: go test -race -coverprofile=coverage.txt -covermode=atomic ./*_test.go
      env:
        CGO_ENABLED: 1

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
